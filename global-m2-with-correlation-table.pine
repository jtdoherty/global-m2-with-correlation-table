//@version=6
indicator('Global M2 with correlation table', overlay=true, scale=scale.right)

// Allow configuration of the number of days to offset the M2 chart line in the indicator settings.
offset = input.int(0, title="Time Offset (days)", minval=-1000, maxval=1000, tooltip="Days to shift M2 line forward")


// EUROZONE Data
EUM2D = request.security("ECONOMICS:EUM2*FX:EURUSD", "D", close, lookahead=barmerge.lookahead_on)

// North America Data
USM2D = request.security("ECONOMICS:USM2", "D", close, lookahead=barmerge.lookahead_on) // 
CAM2D = request.security("ECONOMICS:CAM2*FX_IDC:CADUSD", "D", close, lookahead=barmerge.lookahead_on)

// Non-EU Europe Data
CHM2D = request.security("ECONOMICS:CHM2*FX_IDC:CHFUSD", "D", close, lookahead=barmerge.lookahead_on)
GBM2D = request.security("ECONOMICS:GBM2*FX:GBPUSD", "D", close, lookahead=barmerge.lookahead_on)
FIPOP = request.security("ECONOMICS:FIM2/FX_IDC:USDFIM", "D", close, lookahead=barmerge.lookahead_on)
RUM2D = request.security("ECONOMICS:RUM2*FX_IDC:RUBUSD", "D", close, lookahead=barmerge.lookahead_on)

// Pacific Data
NZM2D = request.security("ECONOMICS:NZM2*FX_IDC:NZDUSD", "D", close, lookahead=barmerge.lookahead_on)

// Asia Data
CNM2D = request.security("ECONOMICS:CNM2*FX_IDC:CNYUSD", "D", close, lookahead=barmerge.lookahead_on)
TWM2D = request.security("ECONOMICS:TWM2*FX_IDC:TWDUSD", "D", close, lookahead=barmerge.lookahead_on)
HKM2D = request.security("ECONOMICS:HKM2*FX_IDC:HKDUSD", "D", close, lookahead=barmerge.lookahead_on)
INM2D = request.security("ECONOMICS:INM2*FX_IDC:INRUSD", "D", close, lookahead=barmerge.lookahead_on)
JPM2D = request.security("ECONOMICS:JPM2*FX_IDC:JPYUSD", "D", close, lookahead=barmerge.lookahead_on)
PHM2D = request.security("ECONOMICS:PHM2*FX_IDC:PHPUSD", "D", close, lookahead=barmerge.lookahead_on)
SGM2D = request.security("ECONOMICS:SGM2*FX_IDC:SGDUSD", "D", close, lookahead=barmerge.lookahead_on)

// Latin America Data
BRM2D = request.security("ECONOMICS:BRM2*FX_IDC:BRLUSD", "D", close, lookahead=barmerge.lookahead_on)
COM2D = request.security("ECONOMICS:COM2*FX_IDC:COPUSD", "D", close, lookahead=barmerge.lookahead_on)
MXM2D = request.security("ECONOMICS:MXM2*FX_IDC:MXNUSD", "D", close, lookahead=barmerge.lookahead_on)

// Middle East Data
AEM2D = 0 // remove United Arab Emrites money supply because it's one too many indicators for TradingView to use, while also using the correlation script. AEM2 has a very small total money supply (therefore little imact) and visually doesn't change the total global M2 line at all.
//AEM2D = request.security("ECONOMICS:AEM2*FX_IDC:AEDUSD", "D", close, lookahead=barmerge.lookahead_on)
TRM2D = request.security("ECONOMICS:TRM2*FX_IDC:TRYUSD", "D", close, lookahead=barmerge.lookahead_on)

// Africa Data
ZAM2D = request.security("ECONOMICS:ZAM2*FX_IDC:ZARUSD", "D", close, lookahead=barmerge.lookahead_on)
var table ctc_table = table.new(position.bottom_right, 1, 1, border_width=1)
table.cell(ctc_table, 0, 0, text="Global M2 Script", text_font_family="monospace", text_color=color.rgb(255, 255, 255), bgcolor=color.rgb(0, 0, 0, 74), height=4, text_size=14)    

// Calculate Global Money Supply M2
total = (EUM2D + USM2D + CAM2D + CHM2D + GBM2D + FIPOP + RUM2D + NZM2D + CNM2D + TWM2D + HKM2D + INM2D + JPM2D + PHM2D + SGM2D + BRM2D + COM2D + MXM2D + AEM2D + TRM2D + ZAM2D) / 1000000000000

time_offset = offset * 86400000 
shifted_time = time - time_offset

// plot(total, color=color.rgb(255, 235, 59, 87), linewidth=2, offset=0) // The M2 line, not offset.
plot(total, color=color.yellow, linewidth=2, offset=offset)



//  Shift the `total` series by the specified offset
shifted_total = request.security(syminfo.tickerid, "D", total[offset])

//  Calculate correlation between `total` and the main chart's close price
correlation_length = input.int(182, title="Custom Correlation Length", minval=1, tooltip="Length of the custom correlation period")
corr30 = math.round(ta.correlation(close, shifted_total, 30),3)*100
corr60 = math.round(ta.correlation(close, shifted_total, 60),3)*100
corr90 = math.round(ta.correlation(close, shifted_total, 90),3)*100
corr180 = math.round(ta.correlation(close, shifted_total, 180),3)*100
corr365 = math.round(ta.correlation(close, shifted_total, 365),3)*100
corr548 = math.round(ta.correlation(close, shifted_total, 548),3)*100
corr730 = math.round(ta.correlation(close, shifted_total, 730),3)*100
corrCustom = math.round(ta.correlation(close, shifted_total, correlation_length),3)*100
//  Create a table to display the correlation value
var table correlation_table = table.new(position.middle_left, 2, 11, bgcolor=color.new(#777777, 24), border_width=1)  //visual option 1 (bottom right)
//var table correlation_table = table.new(position.top_left, 2, 11, bgcolor=color.new(#a9a9a9, 75), border_width=1)  //visual option 2 (top left)

//  Update the table with the correlation value
if barstate.islast
    table.cell(correlation_table, 0, 0, text="Correlation for\n" + str.tostring(offset) + "-Day Offset", text_color=color.rgb(229, 232, 78, 0), bgcolor=#000000a9, height=6, text_size=13) // option 1 (bottom right)
    //table.cell(correlation_table, 0, 0, text="\n\n\nCorrelation for\n" + str.tostring(offset) + "-Day Offset", text_color=color.rgb(229, 232, 78, 0), bgcolor=#000000a9, height=13, text_size=13) // option 2 (top left)
    
    table.cell(correlation_table, 0, 1, text="30 Days", text_color=color.rgb(253, 255, 117, 22), height=3, text_size=14)
    table.cell(correlation_table, 1, 1, text=str.tostring(corr30)+"%", text_color=color.rgb(253, 255, 117, 22), height=2, text_size=14)

    table.cell(correlation_table, 0, 2, text="60 Days", text_color=color.rgb(253, 255, 117, 22), height=3, text_size=14)
    table.cell(correlation_table, 1, 2, text=str.tostring(corr60)+"%", text_color=color.rgb(253, 255, 117, 22), height=2, text_size=14)

    table.cell(correlation_table, 0, 3, text="90 Days", text_color=color.rgb(253, 255, 117, 22), height=3, text_size=14)
    table.cell(correlation_table, 1, 3, text=str.tostring(corr90)+"%", text_color=color.rgb(253, 255, 117, 22), height=2, text_size=14)

    table.cell(correlation_table, 0, 4, text="180 Days", text_color=color.rgb(253, 255, 117, 22), height=3, text_size=14)
    table.cell(correlation_table, 1, 4, text=str.tostring(corr180)+"%", text_color=color.rgb(253, 255, 117, 22), height=2, text_size=14)

    table.cell(correlation_table, 0, 5, text="1 year", text_color=color.rgb(253, 255, 117, 22), height=3, text_size=14)
    table.cell(correlation_table, 1, 5, text=str.tostring(corr365)+"%", text_color=color.rgb(253, 255, 117, 22), height=2, text_size=14)

    table.cell(correlation_table, 0, 6, text="1.5 years", text_color=color.rgb(253, 255, 117, 22), height=3, text_size=14)
    table.cell(correlation_table, 1, 6, text=str.tostring(corr548)+"%", text_color=color.rgb(253, 255, 117, 22), height=2, text_size=14)

    table.cell(correlation_table, 0, 7, text="2 years", text_color=color.rgb(253, 255, 117, 22), height=3, text_size=14)
    table.cell(correlation_table, 1, 7, text=str.tostring(corr730)+"%", text_color=color.rgb(253, 255, 117, 22), height=2, text_size=14)

    table.cell(correlation_table, 0, 8, text=str.tostring(correlation_length) + " Days\n(Custom)", text_color=color.rgb(253, 255, 117, 22), height=5, text_size=14)
    table.cell(correlation_table, 1, 8, text=str.tostring(corrCustom)+"%", text_color=color.rgb(253, 255, 117, 22), height=5, text_size=14)

    
    table.merge_cells(correlation_table,0,0,1,0)
    table.merge_cells(correlation_table,0,9,1,9)
    //table.cell(correlation_table, 0, 10, text=" " , text_color=color.rgb(255, 255, 255, 47), bgcolor=#041b28, height=8, text_size=5)
